name: CI

on:
  pull_request:
  push:
    branches: [main]

permissions: write-all

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [24]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: corepack enable
      - run: npm install --frozen-lockfile || npm install
      - name: Audit dependencies
        run: npm audit --omit=dev --audit-level=moderate
      - name: Prettier
        run: npm run prettier:check
      - name: ESLint
        run: npm run lint
      - name: Stylelint
        run: npm run stylelint
      - name: Typecheck
        run: npm run typecheck
      - name: Unit tests
        run: npm test

  sonar:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      - run: corepack enable
      - run: npm install --frozen-lockfile || npm install
      - name: Audit dependencies
        run: npm audit --omit=dev --audit-level=moderate
      - run: npm test
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      - run: corepack enable
      - run: npm install --frozen-lockfile || npm install
      - name: Audit dependencies
        run: npm audit --omit=dev --audit-level=moderate
      - name: Build
        run: npm run build
      - name: Build Storybook
        run: npm run build-storybook
      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  release:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
      - run: corepack enable
      - run: npm install --frozen-lockfile || npm install
      - name: Audit dependencies
        run: npm audit --omit=dev --audit-level=moderate
      - name: Download artefact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      - name: Semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Check release tag
        id: release_tag
        run: |
          git fetch --tags
          tag=$(git tag --points-at HEAD | head -n 1)
          if [ -n "$tag" ]; then
            echo "tag=$tag" >> "$GITHUB_OUTPUT"
          fi

  docker-image:
    if: needs.release.outputs.tag != ''
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.release.outputs.tag }}
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  rollback:
    if: failure() && github.event_name == 'push'
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Use previous artefact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist
      - name: Deploy previous artefact
        run: echo "Rollback to previous artefact"
